# Generated by Django 4.2.7 on 2025-10-02 09:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du jeu')),
                ('description', models.TextField(verbose_name='Description')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('genre', models.CharField(choices=[('RPG', 'RPG'), ('FPS', 'FPS'), ('METROIDVANIA', 'Metroidvania'), ('VISUAL_NOVEL', 'Visual Novel'), ('PLATFORMER', 'Platformer'), ('STRATEGY', 'Strategy'), ('PUZZLE', 'Puzzle'), ('ADVENTURE', 'Adventure'), ('SIMULATION', 'Simulation'), ('RACING', 'Racing')], max_length=20)),
                ('ambiance', models.CharField(choices=[('POST_APOCALYPTIC', 'Post-apocalyptique'), ('DREAMLIKE', 'Onirique'), ('CYBERPUNK', 'Cyberpunk'), ('DARK_FANTASY', 'Dark Fantasy'), ('MEDIEVAL', 'Médiéval'), ('SCI_FI', 'Science-Fiction'), ('HORROR', 'Horreur'), ('STEAMPUNK', 'Steampunk'), ('MODERN', 'Moderne'), ('FANTASY', 'Fantasy')], max_length=20)),
                ('keywords', models.TextField(help_text='Mots-clés séparés par des virgules')),
                ('cultural_references', models.TextField(blank=True, help_text='Références culturelles (optionnel)')),
                ('universe_description', models.TextField(blank=True, verbose_name="Description de l'univers")),
                ('main_story', models.TextField(blank=True, verbose_name='Histoire principale')),
                ('gameplay_mechanics', models.TextField(blank=True, verbose_name='Mécaniques de jeu')),
                ('concept_art_character', models.ImageField(blank=True, null=True, upload_to='concept_art/characters/')),
                ('concept_art_environment', models.ImageField(blank=True, null=True, upload_to='concept_art/environments/')),
                ('is_public', models.BooleanField(default=True, verbose_name='Jeu public')),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Jeu',
                'verbose_name_plural': 'Jeux',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biographie')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('api_usage_count', models.PositiveIntegerField(default=0, verbose_name='Utilisation API')),
                ('daily_api_limit', models.PositiveIntegerField(default=10, verbose_name='Limite API quotidienne')),
                ('last_api_reset', models.DateField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du lieu')),
                ('description', models.TextField(verbose_name='Description détaillée')),
                ('atmosphere', models.TextField(verbose_name='Ambiance et atmosphère')),
                ('gameplay_significance', models.TextField(verbose_name='Importance dans le gameplay')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='games.game')),
            ],
            options={
                'verbose_name': 'Lieu',
                'verbose_name_plural': 'Lieux',
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('role', models.CharField(choices=[('PROTAGONIST', 'Protagoniste'), ('ANTAGONIST', 'Antagoniste'), ('ALLY', 'Allié'), ('MENTOR', 'Mentor'), ('NEUTRAL', 'Neutre')], max_length=20)),
                ('character_class', models.CharField(max_length=50, verbose_name='Classe/Type')),
                ('background', models.TextField(verbose_name='Histoire personnelle')),
                ('abilities', models.TextField(verbose_name='Capacités et compétences')),
                ('motivations', models.TextField(verbose_name='Motivations')),
                ('appearance', models.TextField(verbose_name='Apparence physique')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='games.game')),
            ],
            options={
                'verbose_name': 'Personnage',
                'verbose_name_plural': 'Personnages',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='games.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favori',
                'verbose_name_plural': 'Favoris',
                'unique_together': {('user', 'game')},
            },
        ),
    ]
