# Generated by Django 5.2 on 2025-10-03 08:19

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("games", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="character",
            name="age_range",
            field=models.CharField(
                blank=True, max_length=20, verbose_name="Tranche d'âge"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="ai_behavior",
            field=models.TextField(blank=True, verbose_name="Comportement IA"),
        ),
        migrations.AddField(
            model_name="character",
            name="archetype",
            field=models.CharField(
                choices=[
                    ("HERO", "Héros"),
                    ("VILLAIN", "Vilain"),
                    ("WISE_OLD_MAN", "Vieil homme sage"),
                    ("TRICKSTER", "Farceur"),
                    ("GUARDIAN", "Gardien"),
                    ("SHADOW", "Ombre"),
                    ("HERALD", "Héraut"),
                    ("THRESHOLD_GUARDIAN", "Gardien du seuil"),
                    ("SHAPESHIFTER", "Changeforme"),
                    ("ALLY", "Allié"),
                    ("MENTOR", "Mentor"),
                ],
                default="HERO",
                max_length=20,
                verbose_name="Archétype",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="catchphrases",
            field=models.TextField(blank=True, verbose_name="Expressions favorites"),
        ),
        migrations.AddField(
            model_name="character",
            name="character_arc",
            field=models.TextField(blank=True, verbose_name="Arc de développement"),
        ),
        migrations.AddField(
            model_name="character",
            name="clothing_style",
            field=models.TextField(blank=True, verbose_name="Style vestimentaire"),
        ),
        migrations.AddField(
            model_name="character",
            name="color_scheme",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Palette de couleurs"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="combat_style",
            field=models.TextField(blank=True, verbose_name="Style de combat"),
        ),
        migrations.AddField(
            model_name="character",
            name="concept_art",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="concept_art/characters/",
                verbose_name="Concept art",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="dialogue_style",
            field=models.TextField(blank=True, verbose_name="Style de dialogue"),
        ),
        migrations.AddField(
            model_name="character",
            name="distinctive_features",
            field=models.TextField(
                blank=True, verbose_name="Caractéristiques distinctives"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="education_training",
            field=models.TextField(blank=True, verbose_name="Formation/Éducation"),
        ),
        migrations.AddField(
            model_name="character",
            name="equipment",
            field=models.TextField(blank=True, verbose_name="Équipement"),
        ),
        migrations.AddField(
            model_name="character",
            name="family_background",
            field=models.TextField(blank=True, verbose_name="Contexte familial"),
        ),
        migrations.AddField(
            model_name="character",
            name="fears",
            field=models.TextField(blank=True, verbose_name="Peur"),
        ),
        migrations.AddField(
            model_name="character",
            name="gameplay_role",
            field=models.TextField(blank=True, verbose_name="Rôle dans le gameplay"),
        ),
        migrations.AddField(
            model_name="character",
            name="goals",
            field=models.TextField(blank=True, verbose_name="Objectifs"),
        ),
        migrations.AddField(
            model_name="character",
            name="height",
            field=models.CharField(blank=True, max_length=20, verbose_name="Taille"),
        ),
        migrations.AddField(
            model_name="character",
            name="importance_level",
            field=models.IntegerField(
                default=1, verbose_name="Niveau d'importance (1-5)"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="is_playable",
            field=models.BooleanField(default=False, verbose_name="Personnage jouable"),
        ),
        migrations.AddField(
            model_name="character",
            name="is_romanceable",
            field=models.BooleanField(
                default=False, verbose_name="Personnage romancable"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="origin_story",
            field=models.TextField(blank=True, verbose_name="Histoire d'origine"),
        ),
        migrations.AddField(
            model_name="character",
            name="personality_type",
            field=models.CharField(
                choices=[
                    ("EXTROVERTED", "Extraverti"),
                    ("INTROVERTED", "Introverti"),
                    ("ANALYTICAL", "Analytique"),
                    ("CREATIVE", "Créatif"),
                    ("PRAGMATIC", "Pragmatique"),
                    ("IDEALIST", "Idéaliste"),
                    ("LOYAL", "Loyal"),
                    ("REBELLIOUS", "Rebelle"),
                    ("MYSTERIOUS", "Mystérieux"),
                    ("CHARISMATIC", "Charismatique"),
                ],
                default="CHARISMATIC",
                max_length=20,
                verbose_name="Type de personnalité",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="reference_images",
            field=models.JSONField(
                blank=True, default=list, verbose_name="Images de référence"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="relationships",
            field=models.TextField(
                blank=True, verbose_name="Relations avec autres personnages"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="significant_events",
            field=models.TextField(blank=True, verbose_name="Événements marquants"),
        ),
        migrations.AddField(
            model_name="character",
            name="skills_rating",
            field=models.JSONField(
                blank=True, default=dict, verbose_name="Évaluation des compétences"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="special_powers",
            field=models.TextField(blank=True, verbose_name="Pouvoirs spéciaux"),
        ),
        migrations.AddField(
            model_name="character",
            name="values",
            field=models.TextField(blank=True, verbose_name="Valeurs"),
        ),
        migrations.AddField(
            model_name="character",
            name="weaknesses",
            field=models.TextField(blank=True, verbose_name="Faiblesses"),
        ),
        migrations.AddField(
            model_name="game",
            name="art_style",
            field=models.CharField(
                choices=[
                    ("REALISTIC", "Réaliste"),
                    ("STYLIZED", "Stylisé"),
                    ("ANIME", "Anime/Manga"),
                    ("PIXEL_ART", "Pixel Art"),
                    ("CELL_SHADED", "Cell Shading"),
                    ("LOW_POLY", "Low Poly"),
                    ("HAND_DRAWN", "Dessin à la main"),
                    ("VECTOR", "Vectoriel"),
                    ("WATERCOLOR", "Aquarelle"),
                    ("OIL_PAINTING", "Peinture à l'huile"),
                    ("MINIMALIST", "Minimaliste"),
                    ("GOTHIC", "Gothique"),
                    ("ART_DECO", "Art Déco"),
                    ("RETRO_FUTURISTIC", "Rétro-futuriste"),
                ],
                default="STYLIZED",
                max_length=20,
                verbose_name="Style graphique",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="competitive_analysis",
            field=models.TextField(blank=True, verbose_name="Analyse concurrentielle"),
        ),
        migrations.AddField(
            model_name="game",
            name="concept_art_creatures",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="concept_art/creatures/",
                verbose_name="Concept art créatures",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="concept_art_ui",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="concept_art/ui/",
                verbose_name="Concept art UI",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="concept_art_weapons",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="concept_art/weapons/",
                verbose_name="Concept art armes",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="core_loop",
            field=models.TextField(
                blank=True, verbose_name="Boucle de gameplay principale"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="development_timeline",
            field=models.TextField(
                blank=True, verbose_name="Planning de développement"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="difficulty_curve",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Courbe de difficulté"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="economy_system",
            field=models.TextField(blank=True, verbose_name="Système économique"),
        ),
        migrations.AddField(
            model_name="game",
            name="elevator_pitch",
            field=models.TextField(blank=True, verbose_name="Pitch en 30 secondes"),
        ),
        migrations.AddField(
            model_name="game",
            name="estimated_playtime",
            field=models.CharField(
                blank=True, max_length=50, verbose_name="Durée estimée"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="favorites_count",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="game",
            name="is_featured",
            field=models.BooleanField(default=False, verbose_name="Jeu mis en avant"),
        ),
        migrations.AddField(
            model_name="game",
            name="magic_system",
            field=models.TextField(blank=True, verbose_name="Système de magie"),
        ),
        migrations.AddField(
            model_name="game",
            name="monetization_strategy",
            field=models.CharField(
                blank=True, max_length=200, verbose_name="Stratégie de monétisation"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="multiple_endings",
            field=models.BooleanField(default=False, verbose_name="Fins multiples"),
        ),
        migrations.AddField(
            model_name="game",
            name="political_system",
            field=models.TextField(blank=True, verbose_name="Système politique"),
        ),
        migrations.AddField(
            model_name="game",
            name="progression_system",
            field=models.TextField(blank=True, verbose_name="Système de progression"),
        ),
        migrations.AddField(
            model_name="game",
            name="rating_average",
            field=models.FloatField(default=0.0, verbose_name="Note moyenne"),
        ),
        migrations.AddField(
            model_name="game",
            name="rating_count",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Nombre de notes"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="story_arcs_description",
            field=models.TextField(
                blank=True, verbose_name="Description des arcs narratifs"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="story_theme",
            field=models.CharField(
                blank=True, max_length=200, verbose_name="Thème narratif"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="story_tone",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Ton narratif"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="tagline",
            field=models.CharField(
                blank=True, max_length=300, verbose_name="Slogan/Accroche"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="target_audience",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Public cible"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="technology_level",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Niveau technologique"
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="unique_selling_points",
            field=models.TextField(blank=True, verbose_name="Points de vente uniques"),
        ),
        migrations.AddField(
            model_name="game",
            name="world_lore",
            field=models.TextField(blank=True, verbose_name="Lore du monde"),
        ),
        migrations.AddField(
            model_name="location",
            name="architectural_style",
            field=models.TextField(blank=True, verbose_name="Style architectural"),
        ),
        migrations.AddField(
            model_name="location",
            name="climate",
            field=models.CharField(
                choices=[
                    ("TEMPERATE", "Tempéré"),
                    ("TROPICAL", "Tropical"),
                    ("ARCTIC", "Arctique"),
                    ("DESERT", "Désertique"),
                    ("HUMID", "Humide"),
                    ("DRY", "Sec"),
                    ("STORMY", "Orageux"),
                    ("MISTY", "Brumeux"),
                    ("ARTIFICIAL", "Artificiel"),
                    ("VARIABLE", "Variable"),
                ],
                default="TEMPERATE",
                max_length=20,
                verbose_name="Climat",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="collectibles",
            field=models.TextField(blank=True, verbose_name="Objets à collectionner"),
        ),
        migrations.AddField(
            model_name="location",
            name="color_palette",
            field=models.CharField(
                blank=True, max_length=200, verbose_name="Palette de couleurs"
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="concept_art",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="concept_art/locations/",
                verbose_name="Concept art",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="cultural_significance",
            field=models.TextField(blank=True, verbose_name="Signification culturelle"),
        ),
        migrations.AddField(
            model_name="location",
            name="danger_level",
            field=models.CharField(
                choices=[
                    ("SAFE", "Sûr"),
                    ("LOW", "Faible"),
                    ("MODERATE", "Modéré"),
                    ("HIGH", "Élevé"),
                    ("EXTREME", "Extrême"),
                    ("DEADLY", "Mortel"),
                ],
                default="SAFE",
                max_length=20,
                verbose_name="Niveau de danger",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="danger_zones",
            field=models.TextField(blank=True, verbose_name="Zones dangereuses"),
        ),
        migrations.AddField(
            model_name="location",
            name="enemies_encountered",
            field=models.TextField(blank=True, verbose_name="Ennemis rencontrés"),
        ),
        migrations.AddField(
            model_name="location",
            name="flora_fauna",
            field=models.TextField(blank=True, verbose_name="Flore et faune"),
        ),
        migrations.AddField(
            model_name="location",
            name="geography",
            field=models.TextField(blank=True, verbose_name="Géographie"),
        ),
        migrations.AddField(
            model_name="location",
            name="history",
            field=models.TextField(blank=True, verbose_name="Histoire du lieu"),
        ),
        migrations.AddField(
            model_name="location",
            name="importance_level",
            field=models.IntegerField(
                default=1, verbose_name="Niveau d'importance (1-5)"
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="inhabitants",
            field=models.TextField(blank=True, verbose_name="Habitants"),
        ),
        migrations.AddField(
            model_name="location",
            name="is_accessible",
            field=models.BooleanField(default=True, verbose_name="Lieu accessible"),
        ),
        migrations.AddField(
            model_name="location",
            name="is_required",
            field=models.BooleanField(default=False, verbose_name="Lieu obligatoire"),
        ),
        migrations.AddField(
            model_name="location",
            name="lighting_conditions",
            field=models.TextField(blank=True, verbose_name="Conditions d'éclairage"),
        ),
        migrations.AddField(
            model_name="location",
            name="local_customs",
            field=models.TextField(blank=True, verbose_name="Coutumes locales"),
        ),
        migrations.AddField(
            model_name="location",
            name="location_type",
            field=models.CharField(
                choices=[
                    ("CITY", "Ville"),
                    ("DUNGEON", "Donjon"),
                    ("FOREST", "Forêt"),
                    ("MOUNTAIN", "Montagne"),
                    ("DESERT", "Désert"),
                    ("OCEAN", "Océan"),
                    ("SPACE", "Espace"),
                    ("UNDERGROUND", "Souterrain"),
                    ("LABORATORY", "Laboratoire"),
                    ("CASTLE", "Château"),
                    ("TEMPLE", "Temple"),
                    ("MARKET", "Marché"),
                    ("TAVERN", "Taverne"),
                    ("PALACE", "Palais"),
                    ("RUINS", "Ruines"),
                    ("FACTORY", "Usine"),
                    ("SHIP", "Vaisseau"),
                    ("STATION", "Station"),
                    ("BASE", "Base"),
                    ("OTHER", "Autre"),
                ],
                default="OTHER",
                max_length=20,
                verbose_name="Type de lieu",
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="natural_resources",
            field=models.TextField(blank=True, verbose_name="Ressources naturelles"),
        ),
        migrations.AddField(
            model_name="location",
            name="puzzles_challenges",
            field=models.TextField(blank=True, verbose_name="Énigmes et défis"),
        ),
        migrations.AddField(
            model_name="location",
            name="quests_available",
            field=models.TextField(blank=True, verbose_name="Quêtes disponibles"),
        ),
        migrations.AddField(
            model_name="location",
            name="reference_images",
            field=models.JSONField(
                blank=True, default=list, verbose_name="Images de référence"
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="safe_zones",
            field=models.TextField(blank=True, verbose_name="Zones sûres"),
        ),
        migrations.AddField(
            model_name="location",
            name="secrets_hidden",
            field=models.TextField(blank=True, verbose_name="Secrets cachés"),
        ),
        migrations.AddField(
            model_name="location",
            name="traversal_methods",
            field=models.TextField(blank=True, verbose_name="Méthodes de déplacement"),
        ),
        migrations.AddField(
            model_name="location",
            name="unlock_conditions",
            field=models.TextField(
                blank=True, verbose_name="Conditions de déverrouillage"
            ),
        ),
        migrations.AddField(
            model_name="location",
            name="visual_style",
            field=models.TextField(blank=True, verbose_name="Style visuel"),
        ),
        migrations.AddField(
            model_name="location",
            name="weather_patterns",
            field=models.TextField(blank=True, verbose_name="Modèles météorologiques"),
        ),
        migrations.AlterField(
            model_name="character",
            name="role",
            field=models.CharField(
                choices=[
                    ("PROTAGONIST", "Protagoniste"),
                    ("ANTAGONIST", "Antagoniste"),
                    ("ALLY", "Allié"),
                    ("MENTOR", "Mentor"),
                    ("NEUTRAL", "Neutre"),
                    ("COMIC_RELIEF", "Comique"),
                    ("LOVE_INTEREST", "Intérêt amoureux"),
                    ("SIDEKICK", "Compagnon"),
                    ("BOSS", "Boss"),
                    ("NPC", "Personnage non-joueur"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="ambiance",
            field=models.CharField(
                choices=[
                    ("POST_APOCALYPTIC", "Post-apocalyptique"),
                    ("DREAMLIKE", "Onirique"),
                    ("CYBERPUNK", "Cyberpunk"),
                    ("DARK_FANTASY", "Dark Fantasy"),
                    ("MEDIEVAL", "Médiéval"),
                    ("SCI_FI", "Science-Fiction"),
                    ("HORROR", "Horreur"),
                    ("STEAMPUNK", "Steampunk"),
                    ("MODERN", "Moderne"),
                    ("FANTASY", "Fantasy"),
                    ("NOIR", "Noir"),
                    ("WESTERN", "Western"),
                    ("PIRATE", "Pirate"),
                    ("SPACE_OPERA", "Space Opera"),
                    ("LOVE_CRAFTIAN", "Lovecraftien"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="description",
            field=models.TextField(verbose_name="Description courte"),
        ),
        migrations.AlterField(
            model_name="game",
            name="genre",
            field=models.CharField(
                choices=[
                    ("RPG", "RPG"),
                    ("FPS", "FPS"),
                    ("METROIDVANIA", "Metroidvania"),
                    ("VISUAL_NOVEL", "Visual Novel"),
                    ("PLATFORMER", "Platformer"),
                    ("STRATEGY", "Strategy"),
                    ("PUZZLE", "Puzzle"),
                    ("ADVENTURE", "Adventure"),
                    ("SIMULATION", "Simulation"),
                    ("RACING", "Racing"),
                    ("ACTION", "Action"),
                    ("SURVIVAL", "Survival"),
                    ("HORROR_SURVIVAL", "Horror Survival"),
                    ("TACTICAL", "Tactical"),
                    ("ROGUELIKE", "Roguelike"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="ConceptArt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "art_type",
                    models.CharField(
                        choices=[
                            ("CHARACTER", "Personnage"),
                            ("ENVIRONMENT", "Environnement"),
                            ("UI", "Interface utilisateur"),
                            ("WEAPON", "Arme"),
                            ("CREATURE", "Créature"),
                            ("VEHICLE", "Véhicule"),
                            ("PROP", "Accessoire"),
                            ("LOGO", "Logo"),
                            ("POSTER", "Affiche"),
                            ("STORYBOARD", "Storyboard"),
                        ],
                        max_length=20,
                        verbose_name="Type d'art",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "image",
                    models.ImageField(upload_to="concept_art/", verbose_name="Image"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="concept_art/thumbnails/",
                        verbose_name="Miniature",
                    ),
                ),
                (
                    "artist_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom de l'artiste"
                    ),
                ),
                (
                    "art_style",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Style artistique"
                    ),
                ),
                (
                    "color_palette",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Palette de couleurs"
                    ),
                ),
                (
                    "mood",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Ambiance"
                    ),
                ),
                (
                    "reference_notes",
                    models.TextField(blank=True, verbose_name="Notes de référence"),
                ),
                (
                    "inspiration_sources",
                    models.TextField(blank=True, verbose_name="Sources d'inspiration"),
                ),
                (
                    "is_final",
                    models.BooleanField(default=False, verbose_name="Version finale"),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="Approuvé"),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0", max_length=20, verbose_name="Version"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concept_arts",
                        to="games.game",
                    ),
                ),
            ],
            options={
                "verbose_name": "Concept art",
                "verbose_name_plural": "Concept arts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StoryArc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom de l'arc")),
                (
                    "arc_type",
                    models.CharField(
                        choices=[
                            ("MAIN", "Arc principal"),
                            ("SIDE", "Arc secondaire"),
                            ("CHARACTER", "Arc de personnage"),
                            ("ROMANCE", "Arc romantique"),
                            ("MYSTERY", "Arc mystère"),
                            ("REVENGE", "Arc de vengeance"),
                            ("REDEMPTION", "Arc de rédemption"),
                            ("COMING_OF_AGE", "Arc de maturation"),
                        ],
                        default="MAIN",
                        max_length=20,
                        verbose_name="Type d'arc",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description de l'arc")),
                (
                    "act_1_setup",
                    models.TextField(verbose_name="Acte I - Mise en place"),
                ),
                (
                    "act_2_confrontation",
                    models.TextField(verbose_name="Acte II - Confrontation"),
                ),
                (
                    "act_3_resolution",
                    models.TextField(verbose_name="Acte III - Résolution"),
                ),
                (
                    "inciting_incident",
                    models.TextField(blank=True, verbose_name="Incident déclencheur"),
                ),
                (
                    "plot_points",
                    models.TextField(blank=True, verbose_name="Points d'intrigue"),
                ),
                ("climax", models.TextField(blank=True, verbose_name="Climax")),
                ("resolution", models.TextField(blank=True, verbose_name="Résolution")),
                (
                    "main_characters",
                    models.TextField(blank=True, verbose_name="Personnages principaux"),
                ),
                (
                    "supporting_characters",
                    models.TextField(
                        blank=True, verbose_name="Personnages secondaires"
                    ),
                ),
                ("themes", models.TextField(blank=True, verbose_name="Thèmes abordés")),
                (
                    "moral_questions",
                    models.TextField(blank=True, verbose_name="Questions morales"),
                ),
                (
                    "emotional_impact",
                    models.TextField(blank=True, verbose_name="Impact émotionnel"),
                ),
                (
                    "estimated_duration",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Durée estimée"
                    ),
                ),
                (
                    "importance_level",
                    models.IntegerField(
                        default=1, verbose_name="Niveau d'importance (1-5)"
                    ),
                ),
                (
                    "is_optional",
                    models.BooleanField(default=False, verbose_name="Arc optionnel"),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="story_arcs",
                        to="games.game",
                    ),
                ),
            ],
            options={
                "verbose_name": "Arc narratif",
                "verbose_name_plural": "Arcs narratifs",
                "ordering": ["importance_level", "name"],
            },
        ),
        migrations.CreateModel(
            name="GameRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "1 - Très mauvais"),
                            (2, "2 - Mauvais"),
                            (3, "3 - Moyen"),
                            (4, "4 - Bon"),
                            (5, "5 - Excellent"),
                        ],
                        verbose_name="Note",
                    ),
                ),
                ("review", models.TextField(blank=True, verbose_name="Avis")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="games.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Évaluation",
                "verbose_name_plural": "Évaluations",
                "ordering": ["-created_at"],
                "unique_together": {("game", "user")},
            },
        ),
    ]
